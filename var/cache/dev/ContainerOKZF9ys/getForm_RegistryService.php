<?php

namespace ContainerOKZF9ys;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevContainer
{
    /*
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Form\\CommentaireModuleType' => ['privates', 'App\\Form\\CommentaireModuleType', 'getCommentaireModuleTypeService', true],
            'App\\Form\\FormContactType' => ['privates', 'App\\Form\\FormContactType', 'getFormContactTypeService', true],
            'App\\Form\\InscriptionFormType' => ['privates', 'App\\Form\\InscriptionFormType', 'getInscriptionFormTypeService', true],
            'App\\Form\\InstitutionCreationType' => ['privates', 'App\\Form\\InstitutionCreationType', 'getInstitutionCreationTypeService', true],
            'App\\Form\\InstitutionType' => ['privates', 'App\\Form\\InstitutionType', 'getInstitutionTypeService', true],
            'App\\Form\\InvitationType' => ['privates', 'App\\Form\\InvitationType', 'getInvitationTypeService', true],
            'App\\Form\\JourHoraireType' => ['privates', 'App\\Form\\JourHoraireType', 'getJourHoraireTypeService', true],
            'App\\Form\\ModuleCreationType' => ['privates', 'App\\Form\\ModuleCreationType', 'getModuleCreationTypeService', true],
            'App\\Form\\ModuleType' => ['privates', 'App\\Form\\ModuleType', 'getModuleTypeService', true],
            'App\\Form\\SessionCreationType' => ['privates', 'App\\Form\\SessionCreationType', 'getSessionCreationTypeService', true],
            'App\\Form\\SessionModuleType' => ['privates', 'App\\Form\\SessionModuleType', 'getSessionModuleTypeService', true],
            'App\\Form\\SessionType' => ['privates', 'App\\Form\\SessionType', 'getSessionTypeService', true],
            'App\\Form\\UtilisateurCommentaireType' => ['privates', 'App\\Form\\UtilisateurCommentaireType', 'getUtilisateurCommentaireTypeService', true],
            'App\\Form\\UtilisateurInstitutionSessionModuleType' => ['privates', 'App\\Form\\UtilisateurInstitutionSessionModuleType', 'getUtilisateurInstitutionSessionModuleTypeService', true],
            'App\\Form\\UtilisateurRoleType' => ['privates', 'App\\Form\\UtilisateurRoleType', 'getUtilisateurRoleTypeService', true],
            'App\\Form\\UtilisateurType' => ['privates', 'App\\Form\\UtilisateurType', 'getUtilisateurTypeService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['privates', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
        ], [
            'App\\Form\\CommentaireModuleType' => '?',
            'App\\Form\\FormContactType' => '?',
            'App\\Form\\InscriptionFormType' => '?',
            'App\\Form\\InstitutionCreationType' => '?',
            'App\\Form\\InstitutionType' => '?',
            'App\\Form\\InvitationType' => '?',
            'App\\Form\\JourHoraireType' => '?',
            'App\\Form\\ModuleCreationType' => '?',
            'App\\Form\\ModuleType' => '?',
            'App\\Form\\SessionCreationType' => '?',
            'App\\Form\\SessionModuleType' => '?',
            'App\\Form\\SessionType' => '?',
            'App\\Form\\UtilisateurCommentaireType' => '?',
            'App\\Form\\UtilisateurInstitutionSessionModuleType' => '?',
            'App\\Form\\UtilisateurRoleType' => '?',
            'App\\Form\\UtilisateurType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
            yield 6 => ($container->privates['form.type_extension.form.password_hasher'] ?? $container->load('getForm_TypeExtension_Form_PasswordHasherService'));
        }, 7), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.password.password_hasher'] ?? $container->load('getForm_TypeExtension_Password_PasswordHasherService'));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? self::getDataCollector_FormService($container))));
    }
}
