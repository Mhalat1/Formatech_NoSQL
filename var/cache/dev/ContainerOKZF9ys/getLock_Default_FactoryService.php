<?php

namespace ContainerOKZF9ys;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLock_Default_FactoryService extends App_KernelDevContainer
{
    /*
     * Gets the private 'lock.default.factory' shared service.
     *
     * @return \Symfony\Component\Lock\LockFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['lock.default.factory'] = $instance = new \Symfony\Component\Lock\LockFactory(($container->privates['.lock.default.store.jfUb7SL'] ?? $container->load('get_Lock_Default_Store_JfUb7SLService')));

        $a = new \Monolog\Logger('lock');
        $a->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $a->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));

        $instance->setLogger($a);

        return $instance;
    }
}
