<?php

namespace ContainerRxXGSEN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getInstitutionControllerindexEtAjouterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.MFcjO6b.App\Controller\InstitutionController::indexEtAjouter()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.MFcjO6b.App\\Controller\\InstitutionController::indexEtAjouter()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'institutionRepository' => ['privates', 'App\\Repository\\InstitutionRepository', 'getInstitutionRepositoryService', true],
            'utilisateurRepository' => ['privates', 'App\\Repository\\UtilisateurRepository', 'getUtilisateurRepositoryService', true],
            'sessionRepository' => ['privates', 'App\\Repository\\SessionRepository', 'getSessionRepositoryService', true],
            'utilisateurInstitutionSessionModuleRepository' => ['privates', 'App\\Repository\\UtilisateurInstitutionSessionModuleRepository', 'getUtilisateurInstitutionSessionModuleRepositoryService', true],
            'moduleRepository' => ['privates', 'App\\Repository\\ModuleRepository', 'getModuleRepositoryService', true],
            'em' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
        ], [
            'institutionRepository' => 'App\\Repository\\InstitutionRepository',
            'utilisateurRepository' => 'App\\Repository\\UtilisateurRepository',
            'sessionRepository' => 'App\\Repository\\SessionRepository',
            'utilisateurInstitutionSessionModuleRepository' => 'App\\Repository\\UtilisateurInstitutionSessionModuleRepository',
            'moduleRepository' => 'App\\Repository\\ModuleRepository',
            'em' => '?',
            'doctrine' => '?',
        ]))->withContext('App\\Controller\\InstitutionController::indexEtAjouter()', $container);
    }
}
